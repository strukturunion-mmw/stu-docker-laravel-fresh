version: '3.8'

networks:
  dockerland:
    name: dockerland

services:
  nginx:
    build:
      context: .
      dockerfile: docker-compose_nginx.dockerfile
    container_name: nginx
    depends_on:
      - php
      - mysql
      - mailhog
    volumes:
      - ./src:/var/www/html
    networks:
      - dockerland
    environment:
      - VIRTUAL_HOST=${URL}
      - LETSENCRYPT_EMAIL=${ADMIN_EMAIL}
      - LETSENCRYPT_HOST=${URL}

  php:
    build:
      context: .
      dockerfile: docker-compose_php.dockerfile
    container_name: php
    volumes:
      - ./src:/var/www/html
    networks:
      - dockerland

  mysql:
    image: mysql:5.7.32
    container_name: mysql
    ports:
      - 4306:3306
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - dockerland

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    networks:
      - dockerland

  artisan:
    build:
      context: .
      dockerfile: docker-compose_artisan.dockerfile
    container_name: artisan
    depends_on:
      - php
      - mysql
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["php", "artisan"]
    networks:
      - dockerland

  npm:
    image: jitesoft/node-yarn:stable-slim
    container_name: npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["npm"]
    networks:
      - dockerland

  yarn:
    image: jitesoft/node-yarn:stable-slim
    deploy:
      resources:
        limits:
          memory: 3000m
        reservations:
          memory: 3000m
    container_name: yarn
    ports:
      - 8080:8080
      - 8180:80
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    entrypoint: [ "yarn" ]
    networks:
      - dockerland

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - dockerland

  scheduler:
    build:
      context: .
      dockerfile: docker-compose_php.dockerfile
    container_name: scheduler
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["php", "artisan", "schedule:work"]
    networks:
      - dockerland

  mailhog:
    image: 'mailhog/mailhog:latest'
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - dockerland